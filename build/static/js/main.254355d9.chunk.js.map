{"version":3,"sources":["utils.js","Input.js","SubmitButton.js","MailAlert.js","SuccessAlert.js","api.js","Form.js","SignupForm.js","index.js","assets/logo.png"],"names":["validateMailFormat","email","test","Input","type","name","label","value","onChange","useState","inputStatus","setInputStatus","inputEmpty","setInputEmpty","mailFormatValidated","setMailFormatValidated","inputCheck","console","log","className","htmlFor","focusable","viewBox","aria-hidden","d","autoComplete","e","target","onFocus","onBlur","inputExitCheck","required","SubmitButton","id","disabled","MailAlert","mail","disableMailAlert","animation","alertCircle","strokeColor","onClick","SuccessAlert","disableSuccessAlert","heart","validateMail","a","emailData","fetch","method","headers","body","JSON","stringify","mailResponse","json","mailResponseBody","data","status","submitForm","firstName","lastName","password","formData","formResponse","formResponseBody","Form","formId","setFirstName","setLastName","setEmail","setPassword","submitDisabled","setSubmitDisabled","formDisabled","setFormDisabled","mailAlertDisabled","setMailAlertDisabled","successAlertDisabled","setSuccessAlertDisabled","useEffect","validateForm","enableMailAlert","submitData","preventDefault","onSubmit","SignupForm","src","logo","alt","rootElement","document","getElementById","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.254355d9.chunk.js","sourcesContent":["// ---------------------------------------------------------------------------------------------------\n\n// Validation Functions\n\n// ---------------------------------------------------------------------------------------------------\n\nexport const validateMailFormat = (email) => {\n    // I validate email format with RegEx here, because I need to change the component state \n    // (and consequently styling) based on email address\n    // WITHOUT submitting the form\n    // This RegEx works in this particular example with traditional form of email address,\n    // BUT it would not be an ideal solution for production. (does not cover all types of addresses)\n    const mailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return (mailRegEx.test(email))\n}\n\n// ---------------------------------------------------------------------------------------------------\n\nexport const validateForm = (firstName, lastName, email, password) => {\n    if (firstName !== \"\" && lastName !== \"\" && email !== \"\" && password !== \"\") {\n        return validateMailFormat(email);\n    } else {\n        return false;\n    }\n}\n\n// ---------------------------------------------------------------------------------------------------\n","import React, {useState} from \"react\";\nimport './index.css';\nimport { validateMailFormat } from './utils'\n\nfunction Input({type, name, label, value, onChange}) {\n    const [inputStatus, setInputStatus] = useState(\"inactive\");\n    const [inputEmpty, setInputEmpty] = useState(false);\n    const [mailFormatValidated, setMailFormatValidated] = useState(true);\n\n    const inputExitCheck = (value, type) => {\n        setInputStatus(\"inactive\");\n        value === \"\" ? setInputEmpty(true) : inputCheck(type, value)\n    }\n\n    const inputCheck = (type, value) => {\n        setInputEmpty(false);\n        setMailFormatValidated(false);\n        type === \"email\" ? (validateMailFormat(value) ? setMailFormatValidated(true) : setMailFormatValidated(false)) : console.log(\"\");\n    }\n\n    return (\n        <div\n            type={type}\n            label={label}\n            className={\n                inputStatus === \"active\" ? 'raisely-text-input active-input' : 'raisely-text-input'\n            }\n        >\n            <label className=\"raisely-label\" htmlFor={name}>{label}</label>\n\n            <div \n                className={\n                    inputEmpty ? 'raisely-invalid-input raisely-invalid' : (type === \"email\" && mailFormatValidated === false ? \"raisely-invalid-input raisely-invalid\" : \"raisely-invalid-input\")\n                }\n            >\n                <span className=\"raisely-invalid-input-text\">\n                    {(type !== \"email\") ? \"This field is required\" : (value === \"\" ? \"This field is required\" : (mailFormatValidated === false ? \"Incorrect email format (e.g. text@text.com)\" : \"This field is required\"))}\n                </span>\n\n                <svg className=\"raisely-error-icon\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                    <path d=\"M4.47 21h15.06c1.54 0 2.5-1.67 1.73-3L13.73 4.99c-.77-1.33-2.69-1.33-3.46 0L2.74 18c-.77 1.33.19 3 1.73 3zM12 14c-.55 0-1-.45-1-1v-2c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1zm1 4h-2v-2h2v2z\"></path>\n                </svg>\n            </div>\n                        \n            <input\n                type={type}\n                label={name}\n                name={name}\n                autoComplete=\"off\"\n                value={value}\n                onChange={e => onChange(e.target.value)}\n                onFocus={() => setInputStatus(\"active\")}\n                onBlur={e => inputExitCheck(e.target.value, type)}\n                required\n            />\n        </div>\n    )\n}\n\nexport default Input;\n","import React from \"react\";\nimport './index.css';\n\nfunction SubmitButton({id, disabled}) {\n    return (\n        <button\n            id={id}\n            type=\"submit\"\n            className={\n                disabled ? \"raisely-button-disabled\" : \"\"\n            }\n        >\n            Sign Up\n        </button>\n    )\n}\n\nexport default SubmitButton;\n","import React from \"react\";\nimport './index.css';\nimport UseAnimations from 'react-useanimations';\nimport alertCircle from 'react-useanimations/lib/alertCircle'\n\nfunction MailAlert({id, mail, disabled, disableMailAlert}) {\n    return (\n        <div \n            id={id} \n            className={\n                disabled ? \"form-alert\" : \"form-alert alert-enabled\"\n            }\n        >\n            <div className=\"alert-icon\"> \n                <UseAnimations animation={alertCircle} strokeColor=\"rgb(95, 64, 210)\" />\n            </div>\n\n            <h1 className=\"alert-text-header\">\n                Oops!\n            </h1>\n\n            <p className=\"alert-text\">\n                It seems like the email address you provided <br/>has been already registered!\n            </p>\n\n            <div className=\"alert-mail\">{mail}</div>\n\n            <div className=\"alert-button\" onClick={disableMailAlert}>\n                Use a different email address\n            </div>\n        </div>\n    )\n}\n\nexport default MailAlert;\n","import React from \"react\";\nimport './index.css';\nimport UseAnimations from 'react-useanimations';\nimport heart from 'react-useanimations/lib/heart';\n\nfunction SuccessAlert({mail, disabled, disableSuccessAlert}) {\n\n    return (\n        <div \n            className={\n                disabled ? \"form-alert form-alert-s\" : \"form-alert form-alert-s alert-enabled\"\n            }\n        >\n            <div className=\"alert-icon\"> \n                <UseAnimations animation={heart} strokeColor=\"rgb(95, 64, 210)\" />\n            </div>\n\n            <h1 className=\"alert-text-header\">\n                Awesome!\n            </h1>\n\n            <p className=\"alert-text\">\n                You have successfully signed up with <br/> the following email address\n            </p>\n\n            <div className=\"alert-mail\">{mail}</div>\n\n            <div className=\"alert-button\" onClick={disableSuccessAlert}>\n                Log in\n            </div>\n        </div>\n    )\n}\n\nexport default SuccessAlert;","// ---------------------------------------------------------------------------------------------------\n\n// API\n\n// ---------------------------------------------------------------------------------------------------\n\nexport const validateMail = async (email) => {\n    const emailData = {\n        \"campaignUuid\": \"46aa3270-d2ee-11ea-a9f0-e9a68ccff42a\",\n        \"data\": {\n            \"email\": email,\n        }\n    }\n\n    const mailResponse = await fetch(\"https://api.raisely.com/v3/check-user\", {\n        method: 'post',\n        headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\"\n        },\n        body: JSON.stringify(emailData)\n    })\n\n    const mailResponseBody = await mailResponse.json();\n    return mailResponseBody.data.status === 'OK'\n}\n\n// ---------------------------------------------------------------------------------------------------\n\nexport const submitForm = async (firstName, lastName, email, password) => {\n    const formData = {\n        \"campaignUuid\": \"46aa3270-d2ee-11ea-a9f0-e9a68ccff42a\",\n        \"data\": {\n         \"firstName\": firstName,\n         \"lastName\": lastName,\n         \"email\": email,\n         \"password\": password\n        } \n    }\n\n    const formResponse = await fetch(\"https://api.raisely.com/v3/signup\", {\n        method: 'post',\n        headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\"\n        },\n        body: JSON.stringify(formData)\n    })\n\n    const formResponseBody = await formResponse.json();\n    return formResponseBody.data.status ? formResponseBody.data.status === \"ACTIVE\" ? formResponseBody : false : false\n}\n\n// ---------------------------------------------------------------------------------------------------","import React, { useState, useEffect } from \"react\";\nimport './index.css';\nimport Input from \"./Input\";\nimport SubmitButton from \"./SubmitButton\";\nimport MailAlert from \"./MailAlert\";\nimport SuccessAlert from \"./SuccessAlert\";\nimport { validateMail, submitForm } from './api.js'\nimport { validateForm } from './utils.js'\n\nfunction Form({ formId }) {\n\n    // ---------------------------------------------------------------------------------------------------\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    // Submit Button will be disabled until all form inputs are filled and mail format correctly validated\n    const [submitDisabled, setSubmitDisabled] = useState(true);\n\n    // Form is disabled when Mail Alert or Success Message after form submission is displayed\n    const [formDisabled, setFormDisabled] = useState(false);\n\n    // Mail Alert is enabled when user inputs mail that is already in the database\n    const [mailAlertDisabled, setMailAlertDisabled] = useState(true);\n\n    // Success Alert is enabled when user successfully signs up\n    const [successAlertDisabled, setSuccessAlertDisabled] = useState(true);\n\n    // ---------------------------------------------------------------------------------------------------\n\n    useEffect(() => {\n        validateForm(firstName, lastName, email, password) ? setSubmitDisabled(false) : setSubmitDisabled(true)\n    }, [firstName, lastName, email, password]);\n\n    // ---------------------------------------------------------------------------------------------------\n\n    const disableMailAlert = () => {\n        setMailAlertDisabled(true);\n        setFormDisabled(false);\n    }\n\n    const enableMailAlert = () => {\n        setFormDisabled(true);\n        setMailAlertDisabled(false);\n    }\n\n    const disableSuccessAlert = () => {\n        setSuccessAlertDisabled(true);\n        setFormDisabled(false);\n    }\n\n    const enableSuccessAlert = () => {\n        setFormDisabled(true);\n        setSuccessAlertDisabled(false);\n    }\n\n    // ---------------------------------------------------------------------------------------------------\n\n    const submitData = async (e) => {\n        e.preventDefault();\n        setMailAlertDisabled(true);\n        if (await validateMail(email)) {\n            const formResp = await submitForm(firstName, lastName, email, password);\n            formResp ? enableSuccessAlert() : enableMailAlert()\n        } else {\n            enableMailAlert()\n        }\n    }\n\n    // ---------------------------------------------------------------------------------------------------\n\n    return (\n        <div className=\"raisely-container\">\n            <form \n                id={ formId } \n                onSubmit={submitData}\n                className={\n                    formDisabled ? \"raisely-form-disabled\" : \"\" \n                }\n            >\n\n                <h1 className=\"raisely-form-heading\">Login to Raisely</h1>\n\n                <Input type=\"text\" name=\"firstName\" label=\"First Name\" value={firstName} onChange={setFirstName}/>\n                <Input type=\"text\" name=\"lastName\" label=\"Last Name\" value={lastName} onChange={setLastName}/>\n                <Input type=\"email\" name=\"email\" label=\"Email\" value={email} onChange={setEmail}/>\n                <Input type=\"password\" name=\"password\" label=\"Password\" value={password} onChange={setPassword}/>\n\n                <SubmitButton id=\"raisely-form-submit\" disabled={submitDisabled} />\n            </form>\n\n            <MailAlert mail={email} disabled={mailAlertDisabled} disableMailAlert={disableMailAlert} />\n\n            <SuccessAlert mail={email} disabled={successAlertDisabled} disableSuccessAlert={disableSuccessAlert} />\n        </div>\n    )\n}\n\nexport default Form;","import React from 'react';\nimport logo from './assets/logo.png';\nimport Form from './Form';\n\nfunction SignupForm() {\n    return (\n        <div id=\"raisely-signup-form\">\n            {/* Raisely Logo */}\n            <img src={logo} id=\"raisely-form-logo\" alt=\"raisely-logo\" />\n\n            {/* Sign up Form */}\n            <Form formId=\"raisely-form\" />\n        </div>\n    );\n}\n\nexport default SignupForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SignupForm from './SignupForm';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <SignupForm />\n  </React.StrictMode>,\n  rootElement\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.2af286bf.png\";"],"sourceRoot":""}